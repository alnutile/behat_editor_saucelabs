<?php

use Drupal\BehatEditorSauceLabs;

/**
 * @file
 * Use the Saucelabs API with the behat_editor module
 *
 * @todo relative namespaces
 */

function behat_editor_saucelabs_permission() {
    $items['behat run saucelabs test'] = array(
        'title' => t('Can run a Saucelabs a test'),
        'description' => t('Can run a Saucelabs a test')
    );
    $items['behat admin saucelabs'] = array(
        'title' => t('Can admin Saucelabs'),
        'description' => t('Can  admin Saucelabs')
    );
    return $items;
}

function behat_editor_saucelabs_menu() {
    $path = drupal_get_path('module', 'behat_editor_saucelabs');
    $items['admin/behat/saucelabs/run/%/%'] = array(
        'page callback' => array('behat_editor_saucelabs_run'),
        'page arguments' => array(4,5),
        'file' => 'behat_editor_saucelabs_run.inc',
        'access arguments' => array('behat run saucelabs test'),
        'file path' => "$path/includes"
    );
    /* allow jquery to get data about jobs status */
    $items['admin/behat/saucelabs/jobs'] = array(
        'page callback' => array('behat_editor_saucelabs_jobs'),
        'access arguments' => array('behat run saucelabs test'),
    );

    /* allow jquery to get data about jobs status */
    $items['admin/behat/saucelabs/job/%'] = array(
        'page callback' => array('behat_editor_saucelabs_job'),
        'page arguments' => array(4),
        'access arguments' => array('behat run saucelabs test'),
    );

    /* allow jquery to get data about jobs status */
    $items['admin/behat/saucelabs/os'] = array(
        'page callback' => array('behat_editor_saucelabs_os'),
        'access arguments' => array('behat run saucelabs test'),
        'file path' => "$path/includes",
        'file' => 'behat_editor_saucelabs_settings.inc',
    );

    /* allow jquery to get data about jobs status */
    $items['admin/behat/saucelabs/browser/%'] = array(
        'page callback' => array('behat_editor_saucelabs_browser'),
        'page arguments' => array(4),
        'access arguments' => array('behat run saucelabs test'),
        'file path' => "$path/includes",
        'file' => 'behat_editor_saucelabs_settings.inc',
    );

    $items['admin/config/development/behat_saucelabs'] = array(
        'page callback' => array('drupal_get_form'),
        'page arguments' => array('behat_editor_saucelabs_admin_form'),
        'access arguments' => array('behat admin saucelabs'),
        'description' => "Setup Behat to integrate with SauceLabs",
        'title' => 'Behat Editor SauceLabs Settings',
        'file path' => "$path/includes",
        'file' => 'behat_editor_saucelabs_admin_form.inc',
    );
    return $items;
}

function behat_editor_saucelabs_form_alter(&$form, $form_state, $form_id) {
    //Deal with Bulk Interface / Batch API
    $form_batch = array('behat_editor_bulk_form_tags', 'behat_editor_bulk_form_modules');
    if(in_array($form_id, $form_batch)) {
        composer_manager_register_autoloader();
        $path = drupal_get_path('module', 'behat_editor_saucelabs');
        $form['#attached']['js']['behat_editor_saucelabs_settings'] = $path . '/js/behat_editor_saucelabs_settings.js';
    }

    $forms = array('behat_editor_view_form', 'behat_editor_edit_form', 'behat_editor_add_form');
    //Deal with other forms
    if(in_array($form_id, $forms)) {
        composer_manager_register_autoloader();
        $disabled = behat_editor_saucelabs_install_check();

        //Hide Run Test button set in variables
        if(variable_get('behat_editor_saucelabs_hide_run') === 1) {
            $form['actions']['run_test']['#attributes'] = array(
                'class' => array('hidden')
            );
        }

        $module = arg(3);
        if(empty($module)) {
            $module = BEHAT_EDITOR_DEFAULT_FOLDER;
        }
        $path = drupal_get_path('module', 'behat_editor_saucelabs');
        $library_path = libraries_get_path('behat_editor_saucelabs_flowplayer'); //@todo use the api better for libraries
        $form['#attached']['js']['behat_editor_saucelabs_run'] = $path . '/js/behat_editor_saucelabs_run.js';
        $form['#attached']['js']['behat_editor_saucelabs_settings'] = $path . '/js/behat_editor_saucelabs_settings.js';
        $form['#attached']['js']['behat_editor_saucelabs_video'] = $library_path . '/flowplayer/flowplayer-3.2.12.min.js';
        $form['#attached']['css']['behat_editor_saucelabs_run'] = $path . '/css/app.css';
        $flow_path = '/' . $library_path . '/flowplayer/flowplayer-3.2.16.swf';
        drupal_add_js(array('behat_editor_saucelabs' => array('flow_path' => "{$flow_path}")), 'setting');
        $form['actions']['saucelabs_run'] = array(
            '#type' => 'link',
            '#title' => 'Run on Sauce Labs',
            '#name' => 'sauce_labs',
            '#href' => "admin/behat/saucelabs/run/$module/",
            '#attributes' => array('class' => array('sauce', 'btn', 'btn-success', "$disabled"))
        );
        behat_editor_saucelabs_video_modal($form);
        behat_editor_saucelabs_iframe_modal($form);

        //Multi select
        //@todo not being used for now.
        //  maybe later in the batch area
//        $options = array(
//            'Window' => drupal_map_assoc(array('Chrome', 'Firefox', 'IE', 'Opera')),
//            'Linux' => drupal_map_assoc(array('Chrome', 'Firefox', 'Opera')),
//            'OS X' => drupal_map_assoc(array('Safari', 'Chrome', 'Firefox', 'Opera')),
//            'iPad' => drupal_map_assoc(array('Safari')),
//            'iPhone' => drupal_map_assoc(array('Safari')),
//        );
//
//        $form['results_area']['settings']['os_browser']['multi-os-browser'] = array(
//            '#type' => 'select',
//            '#title' => t('Only on Saucelabs'),
//            '#description' => t('Chose a combination of Browser and OS to run on Saucelabs'),
//            '#multiple' => TRUE,
//            '#options' => $options,
//        );
    }
}

function behat_editor_saucelabs_install_check() {
    if (!class_exists('Drupal\BehatEditorSauceLabs\Wrapper')) {
        $message = t('SauceLabs Wrapper not found.');
        throw new \RuntimeException($message);
    }

    $username = variable_get('behat_editor_saucelabs_username', '');
    $api_key = variable_get('behat_editor_saucelabs_api', '');

    $check_connection = new Drupal\BehatEditorSauceLabs\Wrapper($username, $api_key);
    $connected = $check_connection->connectTest();

    if(isset($connected['error']) || empty($username) || empty($api_key)) {
        drupal_set_message(t("Saucelabs connection error: :error The Saucelabs button will be disabled till resolved.", array(':error' => $connected['error'])), 'error');
        drupal_set_message(t("You can configure SauceLabs here !here", array('!here' => l('configure', 'admin/config/development/behat_saucelabs'))), 'info');
        return 'disabled';
    } else {
        drupal_add_js(array('behat_editor_saucelabs' => array('user' => $username, 'token' => $api_key)), 'setting');
        return FALSE;
    }


}

function behat_editor_saucelabs_iframe_modal(&$form) {
    $title =  "Sauce Video";
    $path = drupal_get_path('module', 'behat_editor_saucelabs');
    $body = '<div id="slIframe" class="span12">
                    <iframe width="900" height="900" src="">Coming soon..</iframe>
		    </div>';


    $form['behat_editor_saucelabs']['#markup'] = behat_editor_modal($title, $body, $buttons = '', 'slIframeModal');
}

function behat_editor_saucelabs_video_modal(&$form) {
    $title =  "Sauce Video";
    $path = drupal_get_path('module', 'behat_editor_saucelabs');
    $path_library = '/libraries/flv-player/';
    $body = '<div id="slPlayer">
                    <div class="video">Coming soon..</div>
		    </div>';


    $form['behat_editor_saucelabs']['#markup'] = behat_editor_modal($title, $body, $buttons = '', 'slVideo');
}



/**
 * Hooking the exec function from BehatEditorRun and altering the path that is being used.
 *   this will set the profile created in the behat.yml file called saucelabs to be used.
 *
 * @param $command
 * @param $context1
 */
function behat_editor_saucelabs_behat_editor_command_alter(&$command, $context1){
    //context behat_run we leave alone for now
    watchdog("behat_editor_saucelabs", t('Running tests for @context', array('@context' => $context1)));
    if($context1 == 'behat_run_batch') {
        $command['profile'] = "--profile=saucelabs";
    }
}

/**
 * Alter the behat.yml array
 *   Set the path to our FC
 *   Let SauceLabs set the settings for it?
 * @param $behat_yml
 * @param $context1
 */
function behat_editor_saucelabs_behat_editor_yml_array_alter(&$behat_yml, $context1, $settings) {
    if($context1 == 'generate_yml') {
        /**
         * needed to set some things for these but not android
         */
        $mobile_devices = array('iPad', 'iPhone', 'ipad', 'iphone');

        $filename = (isset($settings['filename'])) ? $settings['filename'] : $context1;
        $module = (isset($settings['module'])) ? $settings['module'] : $context1 ;
        $name = 'Behat Tests Module:' . $module . ' Filename: ' . $filename ;
        $username = variable_get('behat_editor_saucelabs_username', '');
        $token = variable_get('behat_editor_saucelabs_api', '');

        list($browser, $version) = explode("|", $settings['browser_version']);
        $os = $settings['os_version'];

        $behat_yml['saucelabs']['context']['class'] = 'FeatureContext';
        $behat_yml['saucelabs']['extensions']['Behat\MinkExtension\Extension']['default_session'] = 'selenium2';
        $behat_yml['saucelabs']['extensions']['Behat\MinkExtension\Extension']['selenium2'] = array(
            'browser' => $browser,
            'wd_host' => "{$username}:{$token}@ondemand.saucelabs.com/wd/hub",
            'capabilities' => array(
                "platform" => "$os",
                'browser' => "$browser",
                'version' => "$version",
                'name' => "$name"
            )
        );

        /**
         * Setup some duration defaults for batchjobs only
         */
        if ($settings['context'] == 'behat_run_batch') {
            $behat_yml['saucelabs']['extensions']['Behat\MinkExtension\Extension']['selenium2']['capabilities']['command-timeout'] = '900';
            $behat_yml['saucelabs']['extensions']['Behat\MinkExtension\Extension']['selenium2']['capabilities']['max-duration'] = '900';
        }

        /**
         * Setup some mobile defaults
         */
        if (in_array($browser, $mobile_devices)) {
            $behat_yml['saucelabs']['extensions']['Behat\MinkExtension\Extension']['selenium2']['capabilities']['selenium-version'] = '';
        }

        //Loops through settings and make a new section in the yml file for each settings
        //  later in the exec the same loop and key combination will run each test
        //@todo this will be used for batch work only coming later
        if(isset($settings['multi_browser_os'])) {
            foreach($settings['multi_browser_os'] as $key => $value) {
                $os = $value[0]['os'];
                list($browser, $version) = explode("|", $value[0]['version']);
                $browser_version = str_replace(array(' ', '.'), '_', "{$browser}_{$version}");
                $behat_yml[$browser_version]['context']['class'] = 'FeatureContext';
                $behat_yml[$browser_version]['extensions']['Behat\MinkExtension\Extension']['default_session'] = 'selenium2';
                $behat_yml[$browser_version]['extensions']['Behat\MinkExtension\Extension']['selenium2'] = array(
                    'browser' => $browser,
                    'wd_host' => "{$username}:{$token}@ondemand.saucelabs.com/wd/hub",
                    'capabilities' => array(
                        "platform" => "$os",
                        'browser' => "$browser",
                        'version' => "$version",
                        'name' => "Behat Test {$browser} {$version} for $name"
                    )
                );
            }
        }
    }
}



function behat_editor_saucelabs_jobs() {
    composer_manager_register_autoloader();
    if (!class_exists('Drupal\BehatEditorSauceLabs\Wrapper')) {
        $message = t('SauceLabs Wrapper not found.');
        drupal_json_output(array('error' => 1, 'message' => $message));
        exit();
    }

    $username = variable_get('behat_editor_saucelabs_username', '');
    $api_key = variable_get('behat_editor_saucelabs_api', '');
    $check_connection = new Drupal\BehatEditorSauceLabs\Wrapper($username, $api_key);
    $summary = $check_connection->jobsSummary();
    drupal_json_output($summary);
    exit();
}

function behat_editor_saucelabs_job($job_id) {
    composer_manager_register_autoloader();
    if (!class_exists('Drupal\BehatEditorSauceLabs\Wrapper')) {
        $message = t('SauceLabs Wrapper not found.');
        drupal_json_output(array('error' => 1, 'message' => $message));
        exit();
    }

    $username = variable_get('behat_editor_saucelabs_username', '');
    $api_key = variable_get('behat_editor_saucelabs_api', '');
    $check_connection = new Drupal\BehatEditorSauceLabs\Wrapper($username, $api_key);
    $summary = $check_connection->job($job_id);
    drupal_json_output($summary);
    exit();
}


function behat_editor_saucelabs_libraries_info() {
    $libraries['behat_editor_saucelabs_flowplayer'] = array(
        'name' => 'Flow Player for Saucelabs',
        'vendor url' => 'http://flash.flowplayer.org/',
        'download url' => 'http://releases.flowplayer.org/flowplayer/flowplayer-3.2.16.zip',
        'version arguments' => array(
            'file' => 'flowplayer/flowplayer-3.2.16.min.js',
            'pattern' => '@flowplayer\s+([0-9a-zA-Z\.-]+)@',
            'line' => '2'
        ),
        'files' => array(
            'js' => array('flowplayer/flowplayer-3.2.16.min.js'),
        ),
    );

    return $libraries;
}
